//@version=5
indicator("Persistent MA Trend Buy/Sell + Volume + Time + RSI Labels", overlay=true)

// === Time Range Inputs ===
startHour2 = input.int(14, "Start Hour 2", minval=0, maxval=23)
startMinute2 = input.int(30, "Start Minute 2", minval=0, maxval=59)
endHour2 = input.int(18, "End Hour 2", minval=0, maxval=23)
endMinute2 = input.int(0, "End Minute 2", minval=0, maxval=59)

color2 = input.color(color.orange, "Time Range 2 Color")
opacity = input.int(90, "Opacity", minval=0, maxval=100)

isInTimeRange2 = (hour > startHour2 or (hour == startHour2 and minute >= startMinute2)) and
                 (hour < endHour2 or (hour == endHour2 and minute < endMinute2))

bgcolor(isInTimeRange2 ? color.new(color2, opacity) : na)

// === MA Calculation ===
ma9 = ta.sma(close, 9)
ma21 = ta.sma(close, 21)

plot(ma9, title="MA 9", color=color.yellow, linewidth=2)
plot(ma21, title="MA 21", color=color.aqua, linewidth=2)

// === Volume and Candle Check ===
vol_threshold = input.int(1000, "Min Volume")
tr = ta.tr(true)

isGreen = close > open
isRed = close < open

// === Persistent MA Trend State (disabled for TF5) ===
var string trendState = "none"
isNotTF5 = timeframe.period != "5"

if ta.crossover(ma9, ma21) and isNotTF5
    trendState := "buy"
    label.new(bar_index, low - tr * 2, "MA Cross Buy", style=label.style_label_up, color=color.teal, textcolor=color.white, size=size.small)

if ta.crossunder(ma9, ma21) and isNotTF5
    trendState := "sell"
    label.new(bar_index, high + tr * 2, "MA Cross Sell", style=label.style_label_down, color=color.maroon, textcolor=color.white, size=size.small)

// === Buy/Sell Signal (based on current trendState) ===
if trendState == "buy" and isInTimeRange2 and isGreen and volume > vol_threshold
    label.new(bar_index, low - tr * 1.5, "Buy", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.small)

if trendState == "sell" and isInTimeRange2 and isRed and volume > vol_threshold
    label.new(bar_index, high + tr * 1.5, "Sell", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.small)

// === RSI Logic ===
rsi_length = input.int(14, "RSI Length")
rsi_source = input.source(close, "RSI Source")
rsi = ta.rsi(rsi_source, rsi_length)
rsi_mid = ta.sma(rsi, rsi_length)

rsi_break_above = rsi > rsi_mid
rsi_break_below = rsi < rsi_mid

plotshape(rsi_break_above, title="RSI Break Above", location=location.bottom, color=color.blue, style=shape.circle, size=size.tiny)
plotshape(rsi_break_below, title="RSI Break Below", location=location.top, color=color.orange, style=shape.circle, size=size.tiny)
